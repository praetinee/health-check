import streamlit as st
import pandas as pd
import gspread
import json
from oauth2client.service_account import ServiceAccountCredentials

# ===============================
# PAGE CONFIG + FONTS
# ===============================
st.set_page_config(page_title="‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û", layout="wide")
st.markdown("""
    <style>
    @import url('https://fonts.googleapis.com/css2?family=Sarabun&display=swap');
    html, body, [class*="css"] {
        font-family: 'Sarabun', sans-serif !important;
    }
    </style>
""", unsafe_allow_html=True)

# ===============================
# LOAD GOOGLE SHEETS
# ===============================
service_account_info = json.loads(st.secrets["GCP_SERVICE_ACCOUNT"])
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds = ServiceAccountCredentials.from_json_keyfile_dict(service_account_info, scope)
client = gspread.authorize(creds)

sheet_url = "https://docs.google.com/spreadsheets/d/1N3l0o_Y6QYbGKx22323mNLPym77N0jkJfyxXFM2BDmc"
spreadsheet = client.open_by_url(sheet_url)
worksheet = spreadsheet.sheet1
df = pd.DataFrame(worksheet.get_all_records())

# Clean up column names
df.columns = df.columns.str.strip()
df['‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô'] = df['‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô'].astype(str)
df['HN'] = df['HN'].astype(str)
df['‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•'] = df['‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•'].astype(str)

# ===============================
# HEADER & SEARCH BAR
# ===============================
st.markdown("<h1 style='text-align:center;'>‡∏£‡∏∞‡∏ö‡∏ö‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏•‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û</h1>", unsafe_allow_html=True)
st.markdown("<h4 style='text-align:center; color:gray;'>- ‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏á‡∏≤‡∏ô‡∏≠‡∏≤‡∏ä‡∏µ‡∏ß‡πÄ‡∏ß‡∏ä‡∏Å‡∏£‡∏£‡∏° ‡∏£‡∏û.‡∏™‡∏±‡∏ô‡∏ó‡∏£‡∏≤‡∏¢ -</h4>", unsafe_allow_html=True)

col1, col2, col3 = st.columns(3)
with col1:
    citizen_id = st.text_input("‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô", max_chars=13, placeholder="‡πÄ‡∏ä‡πà‡∏ô 1234567890123")
with col2:
    hn = st.text_input("HN", placeholder="‡πÄ‡∏ä‡πà‡∏ô 123456")
with col3:
    full_name = st.text_input("‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•", placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ")

# ===============================
# HEALTH FUNCTIONS
# ===============================
def calc_bmi(w, h):
    try:
        h = float(h)
        w = float(w)
        return round(w / ((h / 100) ** 2), 1)
    except:
        return None

def interpret_bmi(bmi):
    if not bmi: return None
    if bmi > 30: return "‡∏≠‡πâ‡∏ß‡∏ô‡∏°‡∏≤‡∏Å"
    elif bmi >= 25: return "‡∏≠‡πâ‡∏ß‡∏ô"
    elif bmi >= 23: return "‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÄ‡∏Å‡∏¥‡∏ô"
    elif bmi >= 18.5: return "‡∏õ‡∏Å‡∏ï‡∏¥"
    else: return "‡∏ú‡∏≠‡∏°"

def interpret_bp(sbp, dbp):
    try:
        sbp, dbp = float(sbp), float(dbp)
        if sbp == 0 or dbp == 0: return None
        if sbp >= 160 or dbp >= 100: return "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡∏™‡∏π‡∏á"
        elif sbp >= 140 or dbp >= 90: return "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡∏™‡∏π‡∏á‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢"
        elif sbp < 120 and dbp < 80: return "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥"
        else: return "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥‡∏Ñ‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏™‡∏π‡∏á"
    except:
        return None

def assess_waist(waist, threshold=90):
    try:
        waist = float(waist)
        if waist == 0: return None
        return "‡∏£‡∏≠‡∏ö‡πÄ‡∏≠‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÄ‡∏Å‡∏ì‡∏ë‡πå" if waist > threshold else "‡∏£‡∏≠‡∏ö‡πÄ‡∏≠‡∏ß‡∏õ‡∏Å‡∏ï‡∏¥"
    except:
        return None

def combined_interpret(bmi_result, waist_result, bp_result):
    parts = []
    if bmi_result:
        parts.append(f"{bmi_result}")
    if waist_result:
        parts.append(waist_result)
    if bp_result:
        parts.append(bp_result)
    return " / ".join(parts) if parts else "-"

# ===============================
# RESULT DISPLAY
# ===============================
if st.button("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö"):
    if not (citizen_id.strip() or hn.strip() or full_name.strip()):
        st.warning("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤")
    else:
        matched = df[
            (df["‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô"] == citizen_id.strip()) |
            (df["HN"] == hn.strip()) |
            (df["‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•"].str.contains(full_name.strip(), case=False, na=False))
        ]

        if matched.empty:
            st.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
        else:
            person = matched.iloc[0]
            st.success(f"‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {person.get('‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏•', '-')}")
            st.markdown(f"**‡πÄ‡∏û‡∏®:** {person.get('‡πÄ‡∏û‡∏®', '-')}")

            years = list(range(61, 69))
            display_years = [f"‡∏û.‡∏®. 25{y}" for y in years]

            def get_values(prefix):
                return [person.get(f"{prefix}{y}", "-") for y in years]

            weights = get_values("‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å")
            heights = get_values("‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á")
            waists = get_values("‡∏£‡∏≠‡∏ö‡πÄ‡∏≠‡∏ß")
            sbps = get_values("SBP")
            dbps = get_values("DBP")

            bmi_results = []
            bp_values = []
            interpretations = []

            for w, h, sbp, dbp, waist in zip(weights, heights, sbps, dbps, waists):
                bmi = calc_bmi(w, h)
                bmi_result = interpret_bmi(bmi)
                waist_result = assess_waist(waist)
                bp_result = interpret_bp(sbp, dbp)

                bmi_results.append(f"{bmi:.1f}" if bmi else "-")
                bp_values.append(f"{sbp}/{dbp}" if sbp != "-" and dbp != "-" else "-")
                interpretations.append(combined_interpret(bmi_result, waist_result, bp_result))

            summary_df = pd.DataFrame({
                "‡∏õ‡∏µ ‡∏û.‡∏®.": display_years,
                "‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å (‡∏Å‡∏Å.)": weights,
                "‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏π‡∏á (‡∏ã‡∏°.)": heights,
                "‡∏£‡∏≠‡∏ö‡πÄ‡∏≠‡∏ß (‡∏ã‡∏°.)": waists,
                "‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô (mmHg)": bp_values,
                "‡πÅ‡∏õ‡∏•‡∏ú‡∏•": interpretations
            })

            st.markdown("### ü©∫ ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å/‡∏£‡∏≠‡∏ö‡πÄ‡∏≠‡∏ß/‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô")
            st.dataframe(summary_df.set_index("‡∏õ‡∏µ ‡∏û.‡∏®.").T, use_container_width=True)

            # ‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞
            st.markdown("### üöª ‡∏ú‡∏•‡∏ï‡∏£‡∏ß‡∏à‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞")
            alb = person.get("Alb68", "").strip()
            sugar = person.get("sugar68", "").strip()
            rbc = person.get("RBC168", "").strip()
            wbc = person.get("WBC168", "").strip()

            def urine_result(val, normal, mild, abnormal):
                if val == "": return ""
                val = val.lower()
                if val in normal: return normal[val]
                if val in mild: return mild[val]
                return abnormal

            alb_result = urine_result(alb, {"negative": "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞"}, {"trace": "‡∏û‡∏ö‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢", "1+": "‡∏û‡∏ö‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢", "2+": "‡∏û‡∏ö‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢"}, "‡∏û‡∏ö‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞")
            sugar_result = urine_result(sugar, {"negative": "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞"}, {"trace": "‡∏û‡∏ö‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢"}, "‡∏û‡∏ö‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞")
            rbc_result = urine_result(rbc, {"negative": "‡∏õ‡∏Å‡∏ï‡∏¥", "0-1": "‡∏õ‡∏Å‡∏ï‡∏¥", "1-2": "‡∏õ‡∏Å‡∏ï‡∏¥", "2-3": "‡∏õ‡∏Å‡∏ï‡∏¥", "3-5": "‡∏õ‡∏Å‡∏ï‡∏¥"}, {"5-10": "‡∏û‡∏ö‡πÄ‡∏°‡πá‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡πÅ‡∏î‡∏á‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢", "10-20": "‡∏û‡∏ö‡πÄ‡∏°‡πá‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡πÅ‡∏î‡∏á‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢"}, "‡∏û‡∏ö‡πÄ‡∏°‡πá‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡πÅ‡∏î‡∏á‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞")
            wbc_result = urine_result(wbc, {"negative": "‡∏õ‡∏Å‡∏ï‡∏¥", "0-1": "‡∏õ‡∏Å‡∏ï‡∏¥", "1-2": "‡∏õ‡∏Å‡∏ï‡∏¥", "2-3": "‡∏õ‡∏Å‡∏ï‡∏¥", "3-5": "‡∏õ‡∏Å‡∏ï‡∏¥"}, {"5-10": "‡∏û‡∏ö‡πÄ‡∏°‡πá‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏Ç‡∏≤‡∏ß‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢", "10-20": "‡∏û‡∏ö‡πÄ‡∏°‡πá‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏Ç‡∏≤‡∏ß‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢"}, "‡∏û‡∏ö‡πÄ‡∏°‡πá‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏Ç‡∏≤‡∏ß‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞")

            abnormal_flags = [
                alb_result not in ["", "‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞", "‡∏û‡∏ö‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢"],
                sugar_result not in ["", "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞", "‡∏û‡∏ö‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢"],
                rbc_result not in ["", "‡∏õ‡∏Å‡∏ï‡∏¥", "‡πÄ‡∏°‡πá‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡πÅ‡∏î‡∏á‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡∏õ‡∏Å‡∏ï‡∏¥"],
                wbc_result not in ["", "‡∏õ‡∏Å‡∏ï‡∏¥", "‡πÄ‡∏°‡πá‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏Ç‡∏≤‡∏ß‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡∏õ‡∏Å‡∏ï‡∏¥"]
            ]

            if all(v == "" for v in [alb_result, sugar_result, rbc_result, wbc_result]):
                overall_result = "-"
            elif any(abnormal_flags):
                overall_result = "‡∏ú‡∏•‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥"
            else:
                overall_result = "‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡∏õ‡∏Å‡∏ï‡∏¥"

            st.markdown(f"""
            <table style='width:100%; font-size:20px; border-collapse: collapse;' border=1>
            <tr><th>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</th><th>‡∏ú‡∏•</th></tr>
            <tr><td>‡πÇ‡∏õ‡∏£‡∏ï‡∏µ‡∏ô‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞</td><td>{alb_result or '-'}</td></tr>
            <tr><td>‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÉ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞</td><td>{sugar_result or '-'}</td></tr>
            <tr><td>‡πÄ‡∏°‡πá‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡πÅ‡∏î‡∏á</td><td>{rbc_result or '-'}</td></tr>
            <tr><td>‡πÄ‡∏°‡πá‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏Ç‡∏≤‡∏ß</td><td>{wbc_result or '-'}</td></tr>
            <tr><td><b>‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•</b></td><td><b>{overall_result}</b></td></tr>
            </table>
            """, unsafe_allow_html=True)
